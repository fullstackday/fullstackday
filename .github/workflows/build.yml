name: "Full Stack Day Demo"
on: [ push ]
env: 
  SITE_DIR: ""
jobs: 
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  build-client:
    defaults:
      run: 
        working-directory: client
    runs-on: ubuntu-latest
    steps:
    - name: Cypress run
      uses: cypress-io/github-action@v2
      with:
        install-command: npm install
        build: npm run build
        start: npm run start
        spec: cypress/integration/**/*.js
        working-directory: client
    - name: Containerize
      id: containerize
      uses: redhat-actions/buildah-build@v2
      with:
        image: client
        tags: v1 ${{ github.sha }} latest
        containerfiles: |
          ./containers/containerfiles/Dockerfile.client
    - name: Push to registry
      id: push
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.containerize.outputs.image }}
        tags: ${{ steps.containerize.outputs.tags }}
        registry: docker.io/fullstackday
        username: fullstackday
        password: ${{ secrets.REGISTRY_PASSWORD }}

  build-backend-and-db:
    defaults:
      run: 
        working-directory: backend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install and run tests
      run: |
        npm install
    - name: Containerize
      id: containerize
      uses: redhat-actions/buildah-build@v2
      with:
        image: backend
        tags: v1 ${{ github.sha }} latest
        containerfiles: |
          ./containers/containerfiles/Dockerfile.backend
    - name: Push to registry
      id: push
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.containerize.outputs.image }}
        tags: ${{ steps.containerize.outputs.tags }}
        registry: docker.io/fullstackday
        username: fullstackday
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Containerize DB
      id: containerize_db
      uses: redhat-actions/buildah-build@v2
      with:
        image: mongodb
        tags: v1 ${{ github.sha }} latest
        containerfiles: |
          ./containers/containerfiles/Dockerfile.mongodb
    - name: Push to registry
      id: push_db
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.containerize.outputs.image }}
        tags: ${{ steps.containerize.outputs.tags }}
        registry: docker.io/fullstackday
        username: fullstackday
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Finish
      run: echo "Image pushed to ${{ steps.push.outputs.registry-paths }}"
